name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false

  build_and_upload_assets:
    name: Build and Upload Assets
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: axes-linux-amd64
            asset_name: axes-x86_64-unknown-linux-gnu.tar.gz
            binary_name: axes
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: axes-macos-amd64
            asset_name: axes-x86_64-apple-darwin.tar.gz
            binary_name: axes
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: axes-windows-amd64
            asset_name: axes-x86_64-pc-windows-msvc.zip
            binary_name: axes.exe

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Create package for upload
        shell: bash
        run: |
          # Define la ruta al binario
          BINARY_PATH="./target/${{ matrix.target }}/release/${{ matrix.binary_name }}"
          
          mkdir -p ${{ matrix.artifact_name }}
          
          cp "$BINARY_PATH" ./${{ matrix.artifact_name }}/
          cp LICENSE ./${{ matrix.artifact_name }}/
          cp README.md ./${{ matrix.artifact_name }}/
          cp TECHNICAL.md ./${{ matrix.artifact_name }}/
          cp GETTING_STARTED.md ./${{ matrix.artifact_name }}/
          cp COMMAND.md ./${{ matrix.artifact_name }}/

          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a "${{ matrix.asset_name }}" "./${{ matrix.artifact_name }}/"
          else
            tar czf "${{ matrix.asset_name }}" "./${{ matrix.artifact_name }}/"
          fi
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream